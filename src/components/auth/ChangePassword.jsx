import React, { useState } from "react";
import "./auth.css";
import { useAuth } from "../../context/AuthContextProvider";
import Loader from "../../loading/Loader";

const ChangePassword = () => {
  const [email, setEmail] = useState("");
  const [oldPassword, setOldPassword] = useState("");
  const [newPassword, setNewPassword] = useState("");
  const [newPasswordConfirm, setNewPasswordConfirm] = useState("");
  const [showPassword, setShowPassword] = useState(false);
  const [detail, setDetail] = useState("");
  const { handleChangePassword, error, loader } = useAuth();
  const handlePassword = () => {
    if (
      !email.trim() ||
      !oldPassword.trim() ||
      !newPassword.trim() ||
      !newPasswordConfirm.trim()
    ) {
      alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–µ");
    } else {
      let formData = new FormData();
      formData.append("email", email);
      formData.append("old_password", oldPassword);
      formData.append("new_password", newPassword);
      formData.append("new_password_confirm", newPasswordConfirm);
      formData.append("detail", detail);
      handleChangePassword(formData);
    }
  };
  if (loader) {
    return <Loader />;
  }
  return (
    <div className="auth-container">
      {error ? <h2>{error}</h2> : null}
      <div className="auth-card">
        <img
          src="https://cdn.freecodecamp.org/platform/universal/logo-512X512.png"
          alt=""
        />
        <p>–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å</p>
        <input
          className="auth-card-inp"
          type="text"
          placeholder="Email"
          onChange={(e) => setEmail(e.target.value)}
        />
        <input
          className="auth-card-inp"
          type={showPassword ? "text" : "password"}
          placeholder="Old password"
          onChange={(e) => setOldPassword(e.target.value)}
        />
        <input
          className="auth-card-inp"
          type={showPassword ? "text" : "password"}
          placeholder="New password"
          onChange={(e) => setNewPassword(e.target.value)}
        />
        <input
          className="auth-card-inp"
          type={showPassword ? "text" : "password"}
          placeholder="New password confirm"
          onChange={(e) => setNewPasswordConfirm(e.target.value)}
        />
        <button
          className="password-show"
          onClick={() => setShowPassword(!showPassword)}
        >
          –ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å
          {showPassword ? "üôà" : "üëÅÔ∏è"}
        </button>
        <button className="auth-card-btn" onClick={handlePassword}>
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
        </button>
      </div>
      <p className="auth-footer">
        freeCodeCamp –±–µ—Å–ø–ª–∞—Ç–µ–Ω, –∏ –≤–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —è–≤–ª—è–µ—Ç—Å—è
        —á–∞—Å—Ç–Ω–æ–π. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã, —á—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –≤–∞—Å
        –∫ –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏. –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å –Ω–∞ freeCodeCamp,
        –≤–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 13 –ª–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ
        –ø—Ä–æ—á–∏—Ç–∞–ª–∏ –∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –£—Å–ª–æ–≤–∏—è–º–∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏ –ü–æ–ª–∏—Ç–∏–∫–æ–π
        –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ freeCodeCamp.org .
      </p>
    </div>
  );
};

export default ChangePassword;
